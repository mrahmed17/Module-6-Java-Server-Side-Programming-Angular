import { FeedbackModel } from './feedback.model';

// Main UserModel, which can represent Admin, Manager, or Employee
export class UserModel {
  id!: string; // Primary Key
  firstName!: string;
  lastName!: string;
  email!: string; // Email address, must be unique
  userName!: string; // Username for login
  password!: string; // Password for authentication
  confirmPassword!: string; // Confirm Password for verify authentication
  addressLine!: string; // User Address
  role!: 'Admin' | 'Manager' | 'Employee'; // Role of the user
  profilePhoto?: string; // Optional profile photo
  gender!: 'Male' | 'Female' | 'Other';
  contact!: string; // Contact number
  nidNo!: number; // National ID number, must be provided and unique
  joiningDate!: Date; // Date of joining
  createdAt!: Date; // Account creation date
  updatedAt!: Date; // Last update date
}

// Admin-specific model, extending the base UserModel
export class AdminModel extends UserModel {
  role: 'Admin' = 'Admin'; // Fixed role for Admin
  // Additional Admin-specific fields can be added here
}

// Manager-specific model, extending the base UserModel
export class ManagerModel extends UserModel {
  role: 'Manager' = 'Manager'; // Fixed role for Manager

  DepartmentModel!: {
    id: string; // Primary Key
    departmentName: string; // Must provide department name
    LocationModel: {
      id: string;
      locationName: string;
      addressLine: string;
      city: string;
      state: string;
      postalCode: string;
      countryName: string;
    };
  };

  AttendanceModel!: AttendanceModel[];
  PerformanceModel!: PerformanceModel[];
}

// Employee-specific model, extending the base UserModel
export class EmployeeModel extends UserModel {
  role: 'Employee' = 'Employee'; // Fixed role for Employee

  DepartmentModel!: {
    id: string; // Primary Key
    departmentName: string; // Must provide department name
    LocationModel: {
      id: string;
      locationName: string;
      addressLine: string;
      city: string;
      state: string;
      postalCode: string;
      countryName: string;
    };
  };

  AttendanceModel!: AttendanceModel[];
  PerformanceModel!: PerformanceModel[];
}

// Attendance model
export class AttendanceModel {
  id!: string;
  workingDay!: Date; // Must be provided to calculate a user's salary or grant leave on a specific day
  inTime!: Date; // In time for the day for total work hours calculation. Example: 8.00
  outTime!: Date; // Out time for the day for total work hours calculation. Example: 8.00
  totalAttendance!: number; // How many days employee or manager works in a calendar month
  fingerprint!: boolean; // If fingerprint match, he or she will be present, otherwise absent
  status!: 'Present' | 'Absent'; // Status of the attendance record
}

// Performance model
export class PerformanceModel {
  id!: string; // Unique identifier for the performance record
  goals!: boolean; // Check if the employee has achieved the goal
  achievements!: string; // Specific achievements during the review period
  reviewDate!: Date; // Date when the review was conducted
  rating!: number; // Example: 1 to 5 scale star
  comments!: string; // Areas of Improvement based on comments about the employee's performance
}

// Feedback model
export class FeedbackModel {
  id!: string;
  rating!: number; // User rating will be shown here. 1 to 5 scale
  comments!: string; // User comments
  feedbackDate!: Date; // Feedback creation date
  UserModel!: {
    id: string;
    firstName: string;
    lastName: string;
    role: 'Manager' | 'Employee';
    profilePhoto?: string;
  };
}

// Leave model
export class LeaveModel {
  id!: string;
  leaveType!: 'Annual' | 'Sick' | 'Maternity' | 'Paternity' | 'Compassionate' | 'Unpaid'; // Type of leave taken
  startDate!: Date; // Start date of the leave
  endDate!: Date; // End date of the leave
  totalLeaveDays!: number; // The system will calculate the total number of days between start and end dates
  status!: 'Pending' | 'Approved' | 'Rejected'; // Status of the leave request
  attachment?: string; // Optional, URL or reference to an attachment (e.g., medical certificate)
  remainingLeave!: number; // Remaining leave balances for each employee
  approvedBy?: string; // Manager ID who approved the leave
  approvalDate?: Date; // Date when the leave was approved or rejected
  deniedOn?: Date; // Date when leave was denied
  comments?: string; // Optional comments or reasons for approval/rejection
}

// Department model
export class DepartmentModel {
  id!: string; // Primary Key
  departmentName!: string; // Must provide department name
  description?: string; // Optional description of the department
  numberOfEmployees?: number; // Number of employees in the department
  LocationModel!: LocationModel; // Association with a LocationModel
  ManagerModel!: ManagerModel; // Department head/manager association
}

// Location model
export class LocationModel {
  id!: string; // Primary Key
  locationName!: string;
  addressLine!: string;
  city!: string;
  state!: string;
  postalCode!: string;
  countryName!: string;
  isActive!: boolean; // A boolean flag indicating whether the location is currently active or inactive.
  createdAt!: Date; // The timestamp when the location was created.
  lastUpdatedAt!: Date; // The timestamp when the location was last updated.
  photo?: string; // Optional field for the location's photo
}

// Payroll model
export class PayrollModel {
  id!: string; // Primary Key
  createdAt!: Date; // Account creation date
  hourlyRate!: number; // Hourly based salary
  performanceBonuses!: number; // Bonuses based on performance
  insurance!: number; // Insurance amount
  medicare!: number; // Medicare amount
  deductions!: number; // Deductions (e.g., tax, insurance)
  netPay!: number; // Net pay after deductions
  paymentDate!: Date; // Date when payment was made
  overtimeExemption!: boolean; // Overtime exemption status
  overtimeHourlyRate!: number; // Overtime hourly rate
  yearlySickDay!: number; // Reserved sick days
  status!: 'Paid' | 'Pending' | 'Overdue'; // Status of the payroll
}
